apiVersion: v1
kind: Namespace
metadata:
  name: dex
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      containers:
      - command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        image: ghcr.io/dexidp/dex:v2.32.0
        name: dex
        ports:
        - containerPort: 5556
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5556
            scheme: HTTP
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
      serviceAccountName: dex
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: dex
        name: config
---
apiVersion: v1
data:
  config.yaml: "issuer: http://10.9.2.100:5556\nstorage:\n  type: kubernetes\n\
    \  config:\n    inCluster: true\nweb:\n  http: 0.0.0.0:5556\noauth2:\n  skipApprovalScreen:\
    \ true\n\nstaticClients:\n- id: client_id\n  redirectURIs:\n  - 'https://10.9.2.101/jenkins-kratos/self-service/methods/oidc/callback/Dex'\n\
    \  name: 'Test App'\n  secret: client_secret\n\nenablePasswordDB: true\nstaticPasswords:\n\
    - email: admin@example.com\n  # bcrypt hash of the string \"password\": $(echo\
    \ password | htpasswd -BinC 10 admin | cut -d: -f2)\n  hash: \"$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W\"\
    \n  username: admin\n"
kind: ConfigMap
metadata:
  name: dex
  namespace: dex
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: dex
spec:
  ports:
  - name: dex
    port: 5556
    protocol: TCP
    targetPort: 5556
  selector:
    app: dex
  type: LoadBalancer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups:
  - dex.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: dex
